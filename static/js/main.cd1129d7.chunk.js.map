{"version":3,"sources":["logo.svg","hooks/useTitle.js","components/TimedTransition.js","screens/homescreen/Intro.js","components/ProjectPreview.js","screens/homescreen/ProjectsSummary.js","components/SocialIcon.js","components/SocialLinks.js","components/Cards.js","components/TextInput.js","components/ContactForm.js","screens/homescreen/AboutMe.js","screens/HomeScreen.js","screens/ProjectsScreen.js","components/Slide.js","components/Badges.js","components/Footer.js","screens/ProjectDetailsScreen.js","screens/experiencescreen/Timeline.js","screens/ExperienceScreen.js","screens/ContactScreen.js","components/AnimatedSwitch.js","components/Nav.js","components/Menu.js","components/Header.js","AnimatedApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useTitle","title","pageDidLoad","useRef","useEffect","current","document","TimedTransition","children","delay","duration","classNames","started","timeout","playingTimeout","originalClasses","props","className","useState","transformedChildren","setTransformedChildren","setTimeout","startTransition","clearAllTimeouts","React","cloneElement","clearTimeout","Intro","onRequestScroll","onClick","bind","ProjectPreview","project","isAnimated","animatedClass","to","slug","name","description","image","style","backgroundImage","images","src","ProjectsSummary","forwardRef","ref","hasBeenVisible","setProject","loadLatestProject","Promise","resolve","projects","require","length","partialVisibility","offset","bottom","onChange","isVisible","visible","then","SocialIcon","social","withUsername","url","icon","accent","username","href","accentcolor","SocialLinks","socialData","map","value","index","key","UserCard","user","publicDir","process","setHasBeenVisibile","visibility","photo","alt","width","height","bio","Textarea","id","label","onChangeText","defaultValue","type","setValue","e","event","target","call","placeholder","htmlFor","TextInput","honeypot","styles","position","overflow","ContactForm","setName","email","setEmail","message","setMessage","tags","setTags","mailtoPrefix","mailto","setMailto","buttonClass","setButtonClass","includes","mail","encodeURI","text","disabled","window","open","AboutMe","HomeScreen","aboutRef","scrollTo","left","top","offsetTop","behavior","ProjectsScreen","Slide","Slides","slideOffset","setSlideOffset","slider","console","log","offsetWidth","switchSlides","direction","offsetPerSlide","goToSlide","newOffset","TechnologyBadge","FixedFooter","Footer","ProjectDetailsScreen","useParams","hasMounted","find","element","Axios","get","response","about","__html","marked","data","catch","reason","finally","undefined","technologies","dangerouslySetInnerHTML","repository","demo","TimelineEntry","date","Timeline","ExperienceScreen","entriesSorted","sort","a","b","Date","entry","year","getFullYear","month","toLocaleString","day","getDate","content","ContactScreen","AnimatedSwitch","withRouter","location","uniqid","SwitchTransition","mode","CSSTransition","enter","exit","Nav","toggleMenu","isOpen","isFixedNav","faBars","setIcon","oldIsOpened","iconTimeout","faTimes","Transition","in","size","Menu","triggerClose","Header","menuOpened","setMenuOpened","AnimatedApp","exact","path","component","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cd1129d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { useEffect, useRef } from 'react';\r\n\r\nconst useTitle = title => {\r\n    const pageDidLoad = useRef(false);\r\n\r\n    useEffect( () => {\r\n        if ( !pageDidLoad.current ) {\r\n            document.title = title;\r\n            pageDidLoad.current = true;\r\n        }\r\n    });\r\n}\r\n\r\nexport default useTitle;","import React, { useRef, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TimedTransition = ({\r\n    children,\r\n    delay = 0,\r\n    duration = 1000,\r\n    classNames = \"\",\r\n    started = false }) => {\r\n\r\n    const timeout = useRef(null);\r\n    const playingTimeout = useRef(null);\r\n    const originalClasses = useRef(children.props.className).current;\r\n    const [transformedChildren, setTransformedChildren] = useState(children);\r\n\r\n    useEffect(() => {\r\n        if ( started ) {\r\n            if ( timeout.current == null ) {\r\n                timeout.current = setTimeout(() => {\r\n                    startTransition();\r\n                }, delay);\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            clearAllTimeouts();\r\n        }\r\n    }, [started]);\r\n\r\n    const startTransition = () => {\r\n        playingTimeout.current = setTimeout(() => {\r\n            setTransformedChildren(\r\n                React.cloneElement(children, {className: originalClasses + \" \" + classNames + \" playing done\"})\r\n            );\r\n        }, duration);\r\n\r\n        setTransformedChildren(\r\n            React.cloneElement(children, {className: originalClasses + \" \" + classNames + \" playing active\"})\r\n        );\r\n    }\r\n\r\n    const clearAllTimeouts = () => {\r\n        clearTimeout(timeout.current);\r\n        clearTimeout(playingTimeout.current);\r\n        timeout.current = null;\r\n        playingTimeout.current = null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {transformedChildren}\r\n        </>\r\n    )\r\n}\r\n\r\nTimedTransition.propTypes = {\r\n    /** A delay in ms after which the animation will be played on the children. */\r\n    delay: PropTypes.number,\r\n    /** How long, in milliseconds, the animation lasts. */\r\n    duration: PropTypes.number,\r\n    /** The name of extra classes to be given to the element once the animation is started. */\r\n    classNames: PropTypes.string,\r\n    /** Child elements that will be affected by the animation. */\r\n    children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default TimedTransition;","import React from 'react';\r\nimport TimedTransition from './../../components/TimedTransition';\r\n\r\nconst Intro = ( { onRequestScroll } ) => {\r\n    return (\r\n        <section>\r\n            <h1 className=\"multiline\">\r\n                {/** Delayed: 0 secs */}\r\n                <TimedTransition\r\n                    started={true}\r\n                    duration={2000}\r\n                    classNames={\"\"}>\r\n                    <span className=\"line home-hi\">\r\n                        Hi,\r\n                    </span>\r\n                </TimedTransition>\r\n                {/** Starts at: 1200ms, ends at: 2200ms */}\r\n                <TimedTransition\r\n                    started={true}\r\n                    duration={1000}\r\n                    delay={1200}\r\n                    classNames={\"\"}>\r\n                    <span className=\"line home-name\">\r\n                        I'm Maxime\r\n                    </span>\r\n                </TimedTransition>\r\n\r\n            </h1>\r\n\r\n            <div className=\"home-bio-container\">\r\n                {/** Starts at: 2800ms, ends at: 3800ms */}\r\n                <TimedTransition\r\n                    started={true}\r\n                    duration={1000}\r\n                    delay={2800}\r\n                    classNames=\"\">\r\n                    <p className=\"home-bio\">\r\n                        I'm a passionate web developer who loves to\r\n                        learn about new technologies, build memorable\r\n                        user experiences and watch the stars.\r\n                    </p>\r\n                </TimedTransition>\r\n            </div>\r\n\r\n            {/** Starts at: 4800ms, Ends at: 5800ms */}\r\n            <TimedTransition\r\n                started={true}\r\n                duration={1000}\r\n                delay={4800}>\r\n                <div className=\"fab-btn home-fab\" onClick={onRequestScroll.bind(this)}>\r\n                    <TimedTransition\r\n                        started={true}\r\n                        duration={500}\r\n                        delay={5300}>\r\n                        <i className=\"fas fa-chevron-down home-fab-icon\"></i>\r\n                    </TimedTransition>\r\n                </div>\r\n            </TimedTransition>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Intro;","import React, { useState } from 'react';\r\nimport TimedTransition from './../components/TimedTransition';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectPreview = ({ project, isAnimated = false }) => {\r\n\r\n    const [animatedClass, setAnimatedClass] = useState((isAnimated) ? \"animated\" : \"\");\r\n\r\n    const title = (\r\n        <h3>\r\n            <Link to={\"/project/\" + project.slug }>\r\n                {project.name}\r\n                <i className=\"fas fa-chevron-right\"></i>\r\n            </Link>\r\n        </h3>\r\n    );\r\n    const description = (<p>{project.description}</p>);\r\n    const image = (\r\n        <div className=\"project-image\"\r\n            style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/images/\" + project.images[0].src + \")\"}}>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"project-container\">\r\n            <div className={\"project \" + animatedClass}>\r\n                <div className={\"project-description\"}>\r\n                    {\r\n                        (isAnimated) ?\r\n                            <TimedTransition\r\n                                started={true}\r\n                                delay={750}\r\n                                duration={3000}\r\n                                children={title} />\r\n                            :\r\n                            title\r\n                    }\r\n\r\n                    {\r\n                        (isAnimated) ?\r\n                            <TimedTransition\r\n                                started={true}\r\n                                delay={2750}\r\n                                duration={1000}\r\n                                children={description} />\r\n                            :\r\n                            description\r\n                    }\r\n\r\n                </div>\r\n\r\n                {\r\n                    (isAnimated) ?\r\n                        <TimedTransition\r\n                            started={true}\r\n                            delay={4250}\r\n                            duration={750}\r\n                            children={image} />\r\n                        :\r\n                        image\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectPreview;","import React, { useRef, useState } from 'react';\r\nimport ReactVisibilitySensor from 'react-visibility-sensor';\r\nimport { Link } from 'react-router-dom';\r\nimport ProjectPreview from '../../components/ProjectPreview';\r\n\r\nconst ProjectsSummary = React.forwardRef((props, ref) => {\r\n\r\n    const hasBeenVisible = useRef(false);\r\n    const [project, setProject] = useState(null);\r\n\r\n    const onChangeVisibility = (visible) => {\r\n        if (!hasBeenVisible.current && visible) {\r\n            hasBeenVisible.current = true;\r\n\r\n            loadLatestProject()\r\n                .then((project) => {\r\n                    setProject(project);\r\n                });\r\n        }\r\n    }\r\n\r\n    const loadLatestProject = () => {\r\n        return new Promise((resolve) => {\r\n            let projects = require(\"./../../assets/data/projects.json\");\r\n\r\n            resolve(projects[projects.length - 1]);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ReactVisibilitySensor\r\n            partialVisibility\r\n            offset={{ bottom: 100 }}\r\n            onChange={(isVisible) => onChangeVisibility(isVisible)}>\r\n            <section ref={ref}>\r\n                <h2>\r\n                    Latest work\r\n                </h2>\r\n\r\n                {project != null &&\r\n                <>\r\n                    <ProjectPreview project={project} isAnimated={true}/>\r\n                    <Link to={\"/projects\"} className=\"button primary more-projects-btn\">\r\n                        See more\r\n                    </Link>\r\n                </>\r\n                }\r\n            </section>\r\n        </ReactVisibilitySensor>\r\n    )\r\n});\r\n\r\nexport default ProjectsSummary;","import React from 'react';\r\n\r\nconst SocialIcon = ( { social, withUsername = false } ) => {\r\n\r\n    const { url, icon, accent, username } = social;\r\n\r\n    return (\r\n        <li>\r\n            <a href={url} accentcolor={accent}>\r\n                <i className={icon}></i>\r\n                { withUsername && \r\n                <span className=\"social__username\">{username}</span>\r\n                }\r\n            </a>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default SocialIcon;","import React, { useRef } from 'react';\r\nimport SocialIcon from './SocialIcon';\r\n\r\nconst SocialLinks = ( { withUsername = false } ) => {\r\n\r\n    const socialData = useRef( require(\"./../assets/data/social.json\") );\r\n\r\n    return(\r\n        <div className=\"social-links\">\r\n            <ul>\r\n                { socialData.current.map( ( value, index ) => {\r\n                    return <SocialIcon key={index} social={value} withUsername={withUsername}/>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks;","import React, { useRef, useState } from 'react';\r\nimport ReactVisibilitySensor from 'react-visibility-sensor';\r\nimport TimedTransition from './TimedTransition';\r\nimport SocialLinks from './SocialLinks';\r\n\r\nexport const UserCard = ({ user, isAnimated = false }) => {\r\n\r\n    const publicDir = useRef(process.env.PUBLIC_URL).current;\r\n    const [hasBeenVisible, setHasBeenVisibile] = useState(false);\r\n\r\n    const onVisibilityChange = isVisible => {\r\n        if (!hasBeenVisible && isVisible) {\r\n            setHasBeenVisibile(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ReactVisibilitySensor\r\n            partialVisibility\r\n            offset={{ bottom: 20 }}\r\n            onChange={visibility => onVisibilityChange(visibility)}\r\n        >\r\n            <TimedTransition\r\n                started={hasBeenVisible}\r\n                delay={250}\r\n                duration={1000}>\r\n                <div className=\"card user animated\">\r\n                    <div className=\"photo-container animated\">\r\n                        <TimedTransition\r\n                            started={hasBeenVisible}\r\n                            delay={750}\r\n                            duration={500}>\r\n                            <img src={publicDir + \"/images/\" + user.photo}\r\n                                className=\"profile-photo\"\r\n                                alt=\"\"\r\n                                width={72}\r\n                                height={72} />\r\n                        </TimedTransition>\r\n\r\n                    </div>\r\n                    <div className=\"card__content\">\r\n                        <h3>\r\n                            {user.name}\r\n                        </h3>\r\n                        <p>\r\n                            {user.bio}\r\n                        </p>\r\n                    </div>\r\n                    <SocialLinks withUsername={true} />\r\n                </div>\r\n            </TimedTransition>\r\n        </ReactVisibilitySensor>\r\n\r\n    )\r\n};","import React, { useState, useRef } from 'react';\r\n\r\nconst TextInput = ( { name, id, label, onChangeText = null, defaultValue = \"\", type = \"text\", honeypot = false} ) => {\r\n\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const styles = useRef();\r\n\r\n    if ( honeypot ) {\r\n        styles.current = {\r\n            height: 0,\r\n            position: \"absolute\",\r\n            overflow: \"hidden\"\r\n        }\r\n    }\r\n\r\n    const onChange = event => {\r\n        setValue(event.target.value);\r\n\r\n        if ( onChangeText != null ) {\r\n            onChangeText.call(this, event.target.value);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"input-field\" style={styles.current}>\r\n            <input type={type} \r\n                id={id} \r\n                name={name} \r\n                value={value} \r\n                onChange={(e) => onChange(e)}\r\n                placeholder=\" \"/>         \r\n            <label htmlFor={id}>\r\n                {label}\r\n            </label>\r\n            <div className=\"input-background\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ( {name, id, label, onChangeText = null, defaultValue = \"\", type = \"text\"} ) => {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const onChange = event => {\r\n        setValue(event.target.value);\r\n\r\n        if ( onChangeText != null ) {\r\n            onChangeText.call(this, event.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-field\">\r\n            <textarea id={id} \r\n                name={name} \r\n                value={value} \r\n                onChange={(e) => onChange(e)}\r\n                placeholder=\" \">{value}</textarea>\r\n            <label htmlFor={id}>\r\n                {label}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextInput;","import React, { useState, useEffect, useRef } from 'react';\r\nimport TextInput, { Textarea } from './TextInput';\r\n\r\nconst ContactForm = ({ title }) => {\r\n\r\n    const [ name, setName ] = useState(\"\");\r\n    const [ email, setEmail ] = useState(\"\");\r\n    const [ message, setMessage ] = useState(\"\");\r\n    const [ tags, setTags ] = useState(null);\r\n\r\n    const mailtoPrefix = useRef(\"mailto:maxime.esnol02@gmail.com\").current;\r\n\r\n    const [ mailto, setMailto ] = useState(\"\");\r\n\r\n    const [ buttonClass, setButtonClass ] = useState(\"disabled\");\r\n\r\n    useEffect( () => {\r\n        if ( message.length > 3 && name !== \"\" && email.includes(\"@\") && tags == null) {\r\n            if ( buttonClass !== \"\" ) {\r\n                setButtonClass(\"\");\r\n            } \r\n\r\n            let mail = mailtoPrefix + \"?subject=\";\r\n            mail += encodeURI(\"[Contact Form] [\" + name + \"]\");\r\n            mail += \"&body=\";\r\n            mail += encodeURI(message);\r\n            mail += \"&bcc=\" + email; \r\n\r\n            setMailto(mail);\r\n        } else {\r\n            setButtonClass(\"disabled\");\r\n        }\r\n    }, [message, name, email, tags]);\r\n\r\n    const openMail = () => {\r\n        window.open(mailto, \"_blank\");\r\n    }\r\n\r\n    return (\r\n        <form className=\"contact\">\r\n            <h3>\r\n                {title}\r\n            </h3>\r\n            \r\n            <TextInput name=\"name\" \r\n            id=\"name\" \r\n            label=\"Your name\" \r\n            onChangeText={(text) => setName(text)}/>\r\n\r\n            <TextInput name=\"email\" \r\n            id=\"email\" \r\n            label=\"Your email\" \r\n            onChangeText={(text) => setEmail(text)}/>\r\n\r\n            <Textarea name=\"message\" \r\n            id=\"message\" \r\n            label=\"Your message\" \r\n            onChangeText={(text) => setMessage(text)}/>\r\n\r\n            <TextInput name=\"tags\"\r\n            honeypot={true}\r\n            id=\"tags\"\r\n            label=\"Tags for your message\"\r\n            onChangeText={(text) => setTags(text)}/>\r\n\r\n\r\n            <button disabled={(buttonClass === \"disabled\")} \r\n            type=\"button\" \r\n            className={\"button primary\"}\r\n            onClick={openMail}>\r\n                Send\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport { UserCard } from '../../components/Cards';\r\nimport ContactForm from '../../components/ContactForm';\r\n\r\nconst AboutMe = props => {\r\n\r\n    const user = require(\"./../../assets/data/aboutme.json\");\r\n\r\n    return (\r\n        <section className=\"about-me\">\r\n            <h2>\r\n                About me\r\n            </h2>\r\n\r\n            <UserCard user={user} isAnimated={true} />\r\n\r\n            <div className=\"what-i-do\">\r\n                <h3>\r\n                    What I do\r\n                </h3>\r\n                <p>\r\n                    Simply put, I create interactive and modern websites and web apps.\r\n                    I take care of both front end and back end. Using technologies as\r\n                    React, Vue and Laravel, I'm able to make stunning, functional websites\r\n                    that do exactly what you want them to.\r\n                </p>\r\n            </div>\r\n\r\n            <ContactForm title={\"Send me a message\"}/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AboutMe;","import React, { useRef } from 'react';\r\nimport useTitle from '../hooks/useTitle';\r\nimport Intro from './homescreen/Intro';\r\nimport ProjectsSummary from './homescreen/ProjectsSummary';\r\nimport AboutMe from './homescreen/AboutMe';\r\n\r\nconst HomeScreen = props => {\r\n\r\n    useTitle(\"Maxime Esnol\");\r\n\r\n    const aboutRef = useRef(null);\r\n\r\n    const scrollTo = ref => {\r\n        window.scrollTo({\r\n            left: 0,\r\n            top: ref.current.offsetTop,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n\r\n            <Intro onRequestScroll={scrollTo.bind(this, aboutRef)}/>\r\n\r\n            <ProjectsSummary ref={aboutRef} />\r\n\r\n            <AboutMe/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen","import React, { useRef } from 'react';\r\nimport useTitle from '../hooks/useTitle';\r\nimport ProjectPreview from '../components/ProjectPreview';\r\n\r\nconst ProjectsScreen = props => {\r\n\r\n    useTitle(\"My Work - Maxime Esnol\");\r\n\r\n    const projects = useRef(require(\"./../assets/data/projects.json\")).current;\r\n\r\n    return(\r\n        <section>\r\n            <h1>My work</h1>\r\n\r\n            {\r\n                projects.map( (project, index) => {\r\n                    return <ProjectPreview key={index} project={project}/>\r\n                })\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProjectsScreen;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst Slides = ( {children, ...props}) => {\r\n\r\n    const [ slideOffset, setSlideOffset ] = useState(0);\r\n    const slider = useRef();\r\n\r\n    useEffect( () => {\r\n        console.log(slider.current.offsetWidth);\r\n        slider.current.scrollTo({\r\n            top: 0,\r\n            left: (slider.current.offsetWidth * children.length) * slideOffset / 100,\r\n            behavior: \"smooth\"\r\n        }); \r\n\r\n    } );\r\n    \r\n    const switchSlides = ( direction ) => {\r\n        let offsetPerSlide = 100 / children.length;\r\n\r\n        if ( direction === \"previous\" ) {\r\n            goToSlide(slideOffset - offsetPerSlide);\r\n        } else if ( direction === \"next\" ) {\r\n            goToSlide(slideOffset + offsetPerSlide);\r\n        }\r\n    }\r\n\r\n    const goToSlide = ( newOffset ) => {\r\n        if ( newOffset <= 0 ) {\r\n            setSlideOffset(0);\r\n            return;\r\n        }\r\n\r\n        if ( newOffset >= 100 ) {\r\n            setSlideOffset(100);\r\n            return;\r\n        }\r\n\r\n        setSlideOffset( newOffset );\r\n    }\r\n\r\n    return(\r\n        <div className=\"slides-container\">\r\n            <i className=\"fas fa-chevron-left\" onClick={() => switchSlides.call(this, \"previous\")}></i>\r\n            <i className=\"fas fa-chevron-right\" onClick={() => switchSlides.call(this, \"next\")}></i>\r\n            <div {...props} className=\"slides\" ref={slider}>\r\n                { children }\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport const Slide = props => {\r\n\r\n    return (\r\n        <div {...props} className=\"slide\">\r\n            { props.children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slides;","import React from 'react';\r\n\r\nexport const TechnologyBadge = ( { name } ) => {\r\n    return(\r\n        <span className=\"technology\">\r\n            { name }\r\n        </span>\r\n    )\r\n}","import React from 'react';\r\n\r\nconst Footer = props => {\r\n\r\n    return(\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const FixedFooter = ( { children, height, ...props } ) => {\r\n    return (\r\n        <>\r\n            <div className={\"fixed-footer-height\"} style={{height: height}}></div>\r\n            <div {...props} className={\"fixed-footer\"}>\r\n                { children }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useRef, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Axios from 'axios';\r\nimport marked from 'marked';\r\nimport Slides, { Slide } from '../components/Slide';\r\nimport { TechnologyBadge } from '../components/Badges';\r\nimport { FixedFooter } from '../components/Footer';\r\n\r\nconst ProjectDetailsScreen = props => {\r\n    const { slug } = useParams();\r\n\r\n    const hasMounted = useRef(false);\r\n    const [ project, setProject ] = useState({});\r\n\r\n    useEffect(() => {\r\n        if ( !hasMounted.current ) {\r\n            hasMounted.current = true;\r\n\r\n            let project = require(\"./../assets/data/projects.json\").find( element => element.slug === slug );\r\n\r\n            Axios.get(\"../data/project-data/\" + slug + \".md\")\r\n            .then( (response) => {\r\n                project.about = {__html: marked(response.data)};\r\n            })\r\n            .catch((reason) => {\r\n                project.about = {__html: \"<p>Unable to retrieve this project's 'About'.</p>\"}\r\n            })\r\n            .finally(() => {\r\n                setProject(project);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n        <section className=\"project-details\">\r\n            <Slides>\r\n                { project.images !== undefined && project.images.map((value, index) => {\r\n                    return (\r\n                        <Slide key={index}\r\n                        style={{backgroundImage: \"url(../images/\"+ value.src +\")\"}}/>\r\n                    )  \r\n                }) }\r\n            </Slides>\r\n\r\n            <h1>\r\n                { project.name }\r\n            </h1>\r\n\r\n            <p className=\"description\">\r\n                { project.description }    \r\n            </p>\r\n\r\n            <div className=\"technologies\">\r\n                { project.technologies !== undefined && project.technologies.map((value, index) => {\r\n                    return <TechnologyBadge key={index} name={value}/>\r\n                })}\r\n            </div>\r\n\r\n            <div className={\"about\"} dangerouslySetInnerHTML={project.about}></div>\r\n\r\n            <FixedFooter height={\"60px\"}>\r\n                { project.repository !== undefined &&\r\n                    <a href={project.repository} className={\"button primary\"}>\r\n                        View Code\r\n                    </a>\r\n                }\r\n\r\n                { project.demo !== undefined && \r\n                    <a href={project.demo} className={\"button primary\"}>\r\n                        View Demo\r\n                    </a>\r\n                }\r\n            </FixedFooter>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProjectDetailsScreen;","import React from 'react';\r\n\r\nconst Timeline = ( { children } ) => {\r\n\r\n    return(\r\n        <div className=\"timeline\">\r\n            <div className=\"timeline-line-start timeline-line-part\"></div>\r\n            { children }\r\n            <div className=\"timeline-line-end timeline-line-part\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TimelineEntry = ( { date, title, children } ) => {\r\n    return (\r\n        <div className=\"timeline-entry\">\r\n            <div className=\"timeline-entry-date\">\r\n                {date}\r\n            </div>\r\n            <div className=\"timeline-entry-content\">\r\n                <h2>{title}</h2>\r\n                <p>\r\n                    {children}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timeline;","import React, { useRef, useState } from 'react';\r\nimport useTitle from '../hooks/useTitle';\r\nimport Timeline, { TimelineEntry } from './experiencescreen/Timeline';\r\nimport TimedTransition from '../components/TimedTransition';\r\nimport ReactVisibilitySensor from 'react-visibility-sensor';\r\n\r\nconst ExperienceScreen = props => {\r\n\r\n    useTitle(\"Experience - Maxime Esnol\");\r\n\r\n    const entries = useRef(require(\"./../assets/data/experience.json\")).current;\r\n\r\n    const entriesSorted = entries.sort( (a, b) => new Date(b.date) - new Date(a.date) );\r\n\r\n    return(\r\n        <section className=\"experience\">\r\n            <h1>My experience</h1>\r\n\r\n            <Timeline>\r\n            { entriesSorted.map( ( entry, index ) => {\r\n                let date = new Date(entry.date);\r\n                let year = date.getFullYear();\r\n                let month = date.toLocaleString('en', {month: 'short'});\r\n                let day = date.getDate();\r\n                return (\r\n                        <TimelineEntry key={index} \r\n                        date={\"\" + day + \" \" + month + \" \" + year} \r\n                        title={entry.title}>\r\n                            {entry.content}\r\n                        </TimelineEntry>\r\n                    )\r\n            }) }\r\n            </Timeline>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ExperienceScreen;","import React from 'react';\r\nimport useTitle from '../hooks/useTitle';\r\nimport ContactForm from '../components/ContactForm';\r\n\r\nconst ContactScreen = props => {\r\n    useTitle(\"Contact me - Maxime Esnol\");\r\n\r\n    return( \r\n        <section className={\"contact\"}>\r\n            <h1>Get in touch</h1>\r\n            \r\n            <ContactForm title={\"Mail me\"}/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ContactScreen;","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\r\nimport { withRouter } from 'react-router';\r\nimport uniqid from 'uniqid';\r\n\r\nconst AnimatedSwitch = withRouter(({ location, children }) => {\r\n    \r\n    if ( typeof location.key === \"undefined\" ) {\r\n        // If the location contains no key, we manually \r\n        // create one. This is necessary otherwise the \r\n        // SwitchTransition will be stuck in an infinite\r\n        // loop between the -enter and -exit transitions.\r\n        location.key = uniqid();\r\n    }\r\n\r\n    return (\r\n        <SwitchTransition mode=\"out-in\">\r\n            <CSSTransition \r\n                key={location.key}\r\n                classNames=\"fade\"\r\n                timeout={{enter: 250, exit: 250}}\r\n            >\r\n\r\n                <Switch location={location}>\r\n                    {children}\r\n                </Switch>\r\n\r\n            </CSSTransition>\r\n        </SwitchTransition>\r\n    )\r\n});\r\n\r\nexport default AnimatedSwitch;","import React, { useRef, useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { CSSTransition, Transition } from 'react-transition-group';\r\n\r\nconst Nav = ({ toggleMenu, isOpen, isFixedNav, height }) => {\r\n    const [icon, setIcon] = useState(faBars);\r\n    const oldIsOpened = useRef(isOpen);\r\n    const iconTimeout = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (isOpen !== oldIsOpened.current) {\r\n            iconTimeout.current = setTimeout( () => {\r\n                setIcon( (isOpen) ? faTimes : faBars );\r\n            }, 100);\r\n            oldIsOpened.current = isOpen;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <nav style={{ height: height + \"px\" }}>\r\n                <p>Maxime Esnol</p>\r\n\r\n                <Transition timeout={200}>\r\n                    <CSSTransition\r\n                        in={isOpen}\r\n                        classNames=\"\"\r\n                        timeout={200}>\r\n                        <div className=\"menu-icon\">\r\n                            <FontAwesomeIcon\r\n                                icon={icon}\r\n                                size={\"lg\"}\r\n                                onClick={toggleMenu} />\r\n\r\n                        </div>\r\n                    </CSSTransition>\r\n                </Transition>\r\n            </nav>\r\n\r\n            {\r\n                isFixedNav &&\r\n                <div className=\"nav-fix-height\"\r\n                    style={{ height: height + \"px\" }}></div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport { Transition, CSSTransition } from 'react-transition-group';\r\n\r\nconst Menu = ({ isOpen, className, children, triggerClose = null }) => {\r\n\r\n    const close = () => {\r\n        if ( triggerClose != null ) {\r\n            triggerClose();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Transition timeout={500}>\r\n            <>\r\n                <CSSTransition\r\n                in={isOpen}\r\n                className=\"overlay\"\r\n                timeout={500}>\r\n                    <div onClick={close}></div>\r\n                </CSSTransition>\r\n                <CSSTransition\r\n                    in={isOpen}\r\n                    className={\"slide\"}\r\n                    timeout={500}>\r\n                    <div>\r\n                        {children}\r\n                    </div>\r\n                </CSSTransition>\r\n            </>\r\n        </Transition>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Nav from './Nav';\r\nimport Menu from './Menu';\r\nimport SocialLinks from './SocialLinks';\r\n\r\nconst Header = props => {\r\n\r\n    const [menuOpened, setMenuOpened] = useState(false);\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpened(!menuOpened);\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Nav toggleMenu={toggleMenu} \r\n                isOpen={menuOpened}\r\n                isFixedNav={true}\r\n                height={70}/>\r\n\r\n            <Menu isOpen={menuOpened} triggerClose={toggleMenu}>\r\n                <ul className=\"site-links\">\r\n                    <li>\r\n                        <Link to=\"/\" onClick={toggleMenu}>Home</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/projects\" onClick={toggleMenu}>Projects</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/experience\" onClick={toggleMenu}>Experience</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/contact\" onClick={toggleMenu}>Get in touch</Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <SocialLinks/>\r\n            </Menu>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProjectsScreen from './screens/ProjectsScreen';\r\nimport ProjectDetailsScreen from './screens/ProjectDetailsScreen';\r\nimport ExperienceScreen from './screens/ExperienceScreen';\r\nimport ContactScreen from './screens/ContactScreen';\r\nimport AnimatedSwitch from './components/AnimatedSwitch';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nconst AnimatedApp = props => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n\r\n            <div className=\"content\">\r\n                <AnimatedSwitch>\r\n                    <Route exact path={\"/\"} component={HomeScreen}/>\r\n                    <Route path={\"/projects\"} component={ProjectsScreen}/>\r\n                    <Route path={\"/project/:slug\"} component={ProjectDetailsScreen}/>\r\n                    <Route path={\"/experience\"} component={ExperienceScreen}/>\r\n                    <Route path={\"/contact\"} component={ContactScreen}/>\r\n                </AnimatedSwitch>\r\n            </div>\r\n\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AnimatedApp;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AnimatedApp from './AnimatedApp';\n\nfunction App() {\n    return (\n        <Router>\n            <AnimatedApp/>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}